/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package sapxeplichtrucbenhvien;

import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.util.Arrays;
import java.util.Random;
import java.util.Vector;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;


/**
 *
 * @author lengu
 */
public class ManHinhChinhCT extends javax.swing.JFrame {

    /**
     * Creates new form ManHinhChinhCT
     */
    Connection conn = null;
    PreparedStatement preStatement = null;
    ResultSet result = null;
    DefaultTableModel dtmLich;
    
   
    public ManHinhChinhCT() {
        initComponents();
        this.setSize(1035,650);
        this.setDefaultCloseOperation(DISPOSE_ON_CLOSE);
        this.setLocationRelativeTo(null);
        this.setTitle("Sáº¯p xáº¿p lá»‹ch trá»±c bá»‡nh viá»‡n Ä‘a khoa");
        this.pnBacSi.setVisible(false);
        this.pnLichTruc.setVisible(false);
        ketNoiCSDL();
        dtmLich = (DefaultTableModel)tblDSBS.getModel();
        hienThiDanhSach();
        
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        desktopPane = new javax.swing.JDesktopPane();
        pnChinh = new javax.swing.JPanel();
        pnBacSi = new javax.swing.JPanel();
        pnDSBS = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tblDSBS = new javax.swing.JTable();
        pnChiTietBS = new javax.swing.JPanel();
        lblMaBS = new javax.swing.JLabel();
        lblKhoa = new javax.swing.JLabel();
        lblHoTen = new javax.swing.JLabel();
        lblGioiTinh = new javax.swing.JLabel();
        lblQueQuan = new javax.swing.JLabel();
        lblNgaySinh = new javax.swing.JLabel();
        btnThemBS = new javax.swing.JButton();
        btnLuu = new javax.swing.JButton();
        btnXoaBS = new javax.swing.JButton();
        txtQueQuan = new javax.swing.JTextField();
        txtHoTen = new javax.swing.JTextField();
        txtMaBS = new javax.swing.JTextField();
        txtNgaySinh = new javax.swing.JTextField();
        txtGioiTinh = new javax.swing.JTextField();
        txtKhoa = new javax.swing.JTextField();
        pnLichTruc = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        jScrollPane2 = new javax.swing.JScrollPane();
        tblLichTruc = new javax.swing.JTable();
        btnSapLich = new javax.swing.JButton();
        btnTimKiemBS = new javax.swing.JButton();
        txtTimKiem = new javax.swing.JTextField();
        btnTimKiemPhong = new javax.swing.JButton();
        btnXemLich = new javax.swing.JButton();
        btnXoaLich = new javax.swing.JButton();
        menuBar = new javax.swing.JMenuBar();
        mnuHeThong = new javax.swing.JMenu();
        mnuDangNhap = new javax.swing.JMenuItem();
        mnuDangXuat = new javax.swing.JMenuItem();
        mnuThoat = new javax.swing.JMenuItem();
        mnuQuanLy = new javax.swing.JMenu();
        mnuThongTinBS = new javax.swing.JMenuItem();
        mnuLichTruc = new javax.swing.JMenuItem();
        mnuTroGiup = new javax.swing.JMenu();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setPreferredSize(new java.awt.Dimension(1000, 650));

        pnChinh.setPreferredSize(new java.awt.Dimension(1100, 586));

        pnBacSi.setPreferredSize(new java.awt.Dimension(1100, 600));
        pnBacSi.setLayout(null);

        pnDSBS.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Danh sách bác s?", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.TOP));

        jScrollPane1.setHorizontalScrollBarPolicy(javax.swing.ScrollPaneConstants.HORIZONTAL_SCROLLBAR_ALWAYS);
        jScrollPane1.setVerticalScrollBarPolicy(javax.swing.ScrollPaneConstants.VERTICAL_SCROLLBAR_ALWAYS);

        tblDSBS.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        tblDSBS.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null}
            },
            new String [] {
                "Mã bác s?", "H? tên", "Gi?i tính", "N?m sinh", "Khoa", "Quê quán"
            }
        ));
        tblDSBS.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tblDSBSMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(tblDSBS);

        javax.swing.GroupLayout pnDSBSLayout = new javax.swing.GroupLayout(pnDSBS);
        pnDSBS.setLayout(pnDSBSLayout);
        pnDSBSLayout.setHorizontalGroup(
            pnDSBSLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, pnDSBSLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 634, Short.MAX_VALUE)
                .addContainerGap())
        );
        pnDSBSLayout.setVerticalGroup(
            pnDSBSLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnDSBSLayout.createSequentialGroup()
                .addGap(21, 21, 21)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 394, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(30, Short.MAX_VALUE))
        );

        pnBacSi.add(pnDSBS);
        pnDSBS.setBounds(20, 30, 670, 470);

        pnChiTietBS.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Thông tin chi ti?t", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.TOP));

        lblMaBS.setFont(new java.awt.Font("Tahoma", 0, 16)); // NOI18N
        lblMaBS.setText("Mã bác s?");

        lblKhoa.setFont(new java.awt.Font("Tahoma", 0, 16)); // NOI18N
        lblKhoa.setText("Khoa");

        lblHoTen.setFont(new java.awt.Font("Tahoma", 0, 16)); // NOI18N
        lblHoTen.setText("H? tên");

        lblGioiTinh.setFont(new java.awt.Font("Tahoma", 0, 16)); // NOI18N
        lblGioiTinh.setText("Gi?i tính");

        lblQueQuan.setFont(new java.awt.Font("Tahoma", 0, 16)); // NOI18N
        lblQueQuan.setText("Quê quán");

        lblNgaySinh.setFont(new java.awt.Font("Tahoma", 0, 16)); // NOI18N
        lblNgaySinh.setText("Ngày sinh");

        btnThemBS.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        btnThemBS.setText("Thêm");
        btnThemBS.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnThemBSActionPerformed(evt);
            }
        });

        btnLuu.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        btnLuu.setText("L?u");
        btnLuu.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnLuuActionPerformed(evt);
            }
        });

        btnXoaBS.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        btnXoaBS.setText("Xóa");
        btnXoaBS.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnXoaBSActionPerformed(evt);
            }
        });

        txtQueQuan.setFont(new java.awt.Font("Tahoma", 0, 16)); // NOI18N

        txtHoTen.setFont(new java.awt.Font("Tahoma", 0, 16)); // NOI18N

        txtMaBS.setFont(new java.awt.Font("Tahoma", 0, 16)); // NOI18N
        txtMaBS.setText(" ");
        txtMaBS.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtMaBSActionPerformed(evt);
            }
        });

        txtNgaySinh.setFont(new java.awt.Font("Tahoma", 0, 16)); // NOI18N

        txtGioiTinh.setFont(new java.awt.Font("Tahoma", 0, 16)); // NOI18N

        txtKhoa.setFont(new java.awt.Font("Tahoma", 0, 16)); // NOI18N

        javax.swing.GroupLayout pnChiTietBSLayout = new javax.swing.GroupLayout(pnChiTietBS);
        pnChiTietBS.setLayout(pnChiTietBSLayout);
        pnChiTietBSLayout.setHorizontalGroup(
            pnChiTietBSLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnChiTietBSLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(pnChiTietBSLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(pnChiTietBSLayout.createSequentialGroup()
                        .addComponent(lblMaBS, javax.swing.GroupLayout.PREFERRED_SIZE, 65, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(txtMaBS, javax.swing.GroupLayout.PREFERRED_SIZE, 160, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(pnChiTietBSLayout.createSequentialGroup()
                        .addComponent(btnThemBS, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnLuu, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnXoaBS, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(pnChiTietBSLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                        .addGroup(javax.swing.GroupLayout.Alignment.LEADING, pnChiTietBSLayout.createSequentialGroup()
                            .addComponent(lblQueQuan)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                            .addComponent(txtQueQuan))
                        .addGroup(javax.swing.GroupLayout.Alignment.LEADING, pnChiTietBSLayout.createSequentialGroup()
                            .addComponent(lblNgaySinh)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                            .addComponent(txtNgaySinh, javax.swing.GroupLayout.DEFAULT_SIZE, 162, Short.MAX_VALUE))
                        .addGroup(javax.swing.GroupLayout.Alignment.LEADING, pnChiTietBSLayout.createSequentialGroup()
                            .addGroup(pnChiTietBSLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(lblHoTen)
                                .addComponent(lblKhoa)
                                .addComponent(lblGioiTinh))
                            .addGap(15, 15, 15)
                            .addGroup(pnChiTietBSLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                .addComponent(txtKhoa, javax.swing.GroupLayout.DEFAULT_SIZE, 162, Short.MAX_VALUE)
                                .addComponent(txtHoTen)
                                .addComponent(txtGioiTinh)))))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        pnChiTietBSLayout.setVerticalGroup(
            pnChiTietBSLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnChiTietBSLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(pnChiTietBSLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtMaBS, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblMaBS, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(pnChiTietBSLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtKhoa, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblKhoa, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(pnChiTietBSLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtHoTen, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblHoTen, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(pnChiTietBSLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtGioiTinh, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblGioiTinh, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(pnChiTietBSLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtNgaySinh, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblNgaySinh, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(pnChiTietBSLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtQueQuan, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblQueQuan, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(31, 31, 31)
                .addGroup(pnChiTietBSLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnThemBS, javax.swing.GroupLayout.PREFERRED_SIZE, 41, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnLuu, javax.swing.GroupLayout.PREFERRED_SIZE, 41, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnXoaBS, javax.swing.GroupLayout.PREFERRED_SIZE, 41, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(81, 81, 81))
        );

        pnBacSi.add(pnChiTietBS);
        pnChiTietBS.setBounds(700, 30, 290, 470);

        jLabel2.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLabel2.setText("L?CH TR?C B?NH VI?N");

        jScrollPane2.setHorizontalScrollBarPolicy(javax.swing.ScrollPaneConstants.HORIZONTAL_SCROLLBAR_ALWAYS);
        jScrollPane2.setVerticalScrollBarPolicy(javax.swing.ScrollPaneConstants.VERTICAL_SCROLLBAR_ALWAYS);

        tblLichTruc.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null}
            },
            new String [] {
                "Mã l?ch", "Mã bác s?", "H? tên", "Ngày tr?c", "Ca tr?c", "Phòng"
            }
        ));
        jScrollPane2.setViewportView(tblLichTruc);

        btnSapLich.setText("S?p l?ch");
        btnSapLich.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSapLichActionPerformed(evt);
            }
        });

        btnTimKiemBS.setText("Tìm ki?m bác s?");
        btnTimKiemBS.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnTimKiemBSActionPerformed(evt);
            }
        });

        txtTimKiem.setText("Nh?p thông tin ?? tìm");
        txtTimKiem.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txtTimKiemKeyPressed(evt);
            }
        });

        btnTimKiemPhong.setText("Tìm ki?m phòng");
        btnTimKiemPhong.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnTimKiemPhongActionPerformed(evt);
            }
        });

        btnXemLich.setText("Xem l?ch");
        btnXemLich.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnXemLichActionPerformed(evt);
            }
        });

        btnXoaLich.setText("Xóa l?ch");
        btnXoaLich.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnXoaLichActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout pnLichTrucLayout = new javax.swing.GroupLayout(pnLichTruc);
        pnLichTruc.setLayout(pnLichTrucLayout);
        pnLichTrucLayout.setHorizontalGroup(
            pnLichTrucLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnLichTrucLayout.createSequentialGroup()
                .addGroup(pnLichTrucLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(pnLichTrucLayout.createSequentialGroup()
                        .addGap(399, 399, 399)
                        .addComponent(jLabel2))
                    .addGroup(pnLichTrucLayout.createSequentialGroup()
                        .addGap(30, 30, 30)
                        .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 943, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(pnLichTrucLayout.createSequentialGroup()
                        .addGap(189, 189, 189)
                        .addComponent(btnXoaLich)
                        .addGap(36, 36, 36)
                        .addComponent(btnSapLich, javax.swing.GroupLayout.PREFERRED_SIZE, 85, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(34, 34, 34)
                        .addComponent(btnXemLich)
                        .addGap(154, 154, 154)
                        .addComponent(txtTimKiem, javax.swing.GroupLayout.PREFERRED_SIZE, 164, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addGroup(pnLichTrucLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(btnTimKiemBS, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(btnTimKiemPhong, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
                .addContainerGap(115, Short.MAX_VALUE))
        );
        pnLichTrucLayout.setVerticalGroup(
            pnLichTrucLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnLichTrucLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 401, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGroup(pnLichTrucLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(pnLichTrucLayout.createSequentialGroup()
                        .addGap(8, 8, 8)
                        .addComponent(btnTimKiemBS, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnTimKiemPhong, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(pnLichTrucLayout.createSequentialGroup()
                        .addGroup(pnLichTrucLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(pnLichTrucLayout.createSequentialGroup()
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(btnXemLich, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, pnLichTrucLayout.createSequentialGroup()
                                .addGap(26, 26, 26)
                                .addGroup(pnLichTrucLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(btnSapLich, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(txtTimKiem, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(btnXoaLich, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE))))
                        .addGap(0, 25, Short.MAX_VALUE)))
                .addContainerGap())
        );

        javax.swing.GroupLayout pnChinhLayout = new javax.swing.GroupLayout(pnChinh);
        pnChinh.setLayout(pnChinhLayout);
        pnChinhLayout.setHorizontalGroup(
            pnChinhLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnChinhLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(pnBacSi, javax.swing.GroupLayout.PREFERRED_SIZE, 990, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(110, Short.MAX_VALUE))
            .addGroup(pnChinhLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, pnChinhLayout.createSequentialGroup()
                    .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(pnLichTruc, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addContainerGap()))
        );
        pnChinhLayout.setVerticalGroup(
            pnChinhLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnChinhLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(pnBacSi, javax.swing.GroupLayout.PREFERRED_SIZE, 560, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(pnChinhLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, pnChinhLayout.createSequentialGroup()
                    .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(pnLichTruc, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
        );

        desktopPane.add(pnChinh);
        pnChinh.setBounds(0, 0, 1020, 586);

        mnuHeThong.setMnemonic('f');
        mnuHeThong.setText("H? th?ng");

        mnuDangNhap.setMnemonic('o');
        mnuDangNhap.setText("??ng nh?p");
        mnuDangNhap.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                mnuDangNhapActionPerformed(evt);
            }
        });
        mnuHeThong.add(mnuDangNhap);

        mnuDangXuat.setMnemonic('s');
        mnuDangXuat.setText("??ng xu?t");
        mnuHeThong.add(mnuDangXuat);

        mnuThoat.setMnemonic('a');
        mnuThoat.setText("Thoát");
        mnuThoat.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                mnuThoatActionPerformed(evt);
            }
        });
        mnuHeThong.add(mnuThoat);

        menuBar.add(mnuHeThong);

        mnuQuanLy.setMnemonic('e');
        mnuQuanLy.setText("Qu?n lý");
        mnuQuanLy.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                mnuQuanLyActionPerformed(evt);
            }
        });

        mnuThongTinBS.setMnemonic('t');
        mnuThongTinBS.setText("Thông tin bác s?");
        mnuThongTinBS.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                mnuThongTinBSActionPerformed(evt);
            }
        });
        mnuQuanLy.add(mnuThongTinBS);

        mnuLichTruc.setMnemonic('y');
        mnuLichTruc.setText("L?ch tr?c");
        mnuLichTruc.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                mnuLichTrucActionPerformed(evt);
            }
        });
        mnuQuanLy.add(mnuLichTruc);

        menuBar.add(mnuQuanLy);

        mnuTroGiup.setText("Tr? giúp");
        menuBar.add(mnuTroGiup);

        setJMenuBar(menuBar);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addComponent(desktopPane)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addComponent(desktopPane)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void mnuQuanLyActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_mnuQuanLyActionPerformed
        // TODO add your handling code here:
        
    }//GEN-LAST:event_mnuQuanLyActionPerformed

    private void mnuDangNhapActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_mnuDangNhapActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_mnuDangNhapActionPerformed

    private void mnuThongTinBSActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_mnuThongTinBSActionPerformed
        // TODO add your handling code here:
        pnBacSi.setVisible(true);
        pnLichTruc.setVisible(false);
        
    }//GEN-LAST:event_mnuThongTinBSActionPerformed

    private void mnuLichTrucActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_mnuLichTrucActionPerformed
        // TODO add your handling code here:
        pnBacSi.setVisible(false);
        pnLichTruc.setVisible(true);
    }//GEN-LAST:event_mnuLichTrucActionPerformed

    private void mnuThoatActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_mnuThoatActionPerformed
        // TODO add your handling code here:
        int tb = JOptionPane.showConfirmDialog(null, "Báº¡n cÃ³ cháº¯c muá»‘n thoÃ¡t hay khÃ´ng", "Cáº£nh bÃ¡o",
                        JOptionPane.YES_NO_OPTION, JOptionPane.WARNING_MESSAGE);
        if(tb==JOptionPane.YES_OPTION){                
            System.exit(0);
        }
    }//GEN-LAST:event_mnuThoatActionPerformed

    private void tblDSBSMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tblDSBSMouseClicked
        // TODO add your handling code here:
        
        int row = tblDSBS.getSelectedRow();
        txtMaBS.setText((String)tblDSBS.getValueAt(row, 0));
        txtHoTen.setText((String)tblDSBS.getValueAt(row, 1));
        txtGioiTinh.setText((String)tblDSBS.getValueAt(row, 2));
        txtNgaySinh.setText((String)tblDSBS.getValueAt(row, 3));       
        txtKhoa.setText((String)tblDSBS.getValueAt(row, 4));
        txtQueQuan.setText((String)tblDSBS.getValueAt(row, 5));
    }//GEN-LAST:event_tblDSBSMouseClicked

    private void txtMaBSActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtMaBSActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtMaBSActionPerformed

    private void btnSapLichActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSapLichActionPerformed
        // TODO add your handling code here:
        dtmLich = (DefaultTableModel)tblLichTruc.getModel();
        hienThiLichTruc();
    }//GEN-LAST:event_btnSapLichActionPerformed

    private void btnThemBSActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnThemBSActionPerformed
        // TODO add your handling code here:
        txtMaBS.setText("");
        txtHoTen.setText("");
        txtKhoa.setText("");
        txtGioiTinh.setText("");
        txtNgaySinh.setText("");
        txtQueQuan.setText("");
        txtMaBS.requestFocus();
    }//GEN-LAST:event_btnThemBSActionPerformed

    private void btnLuuActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnLuuActionPerformed
        // TODO add your handling code here:
        if(kiemTraTonTai(txtMaBS.getText())){
            int ret = JOptionPane.showConfirmDialog(null,
                        "MÃ£ ["+txtMaBS.getText()+"] Ä‘Ã£ tá»“n táº¡i, báº¡n cÃ³ muá»‘n cáº­p nháº­t?",
                        "ThÃ´ng bÃ¡o", JOptionPane.YES_NO_OPTION);
            if(ret==JOptionPane.YES_OPTION){
                try{
                    String sqlUpdate="UPDATE BACSI SET KHOA = ?, HOTEN = ?, PHAI = ?, NAMSINH = ?, QUEQUAN = ? where MaBS = ?";
                    preStatement = conn.prepareStatement(sqlUpdate);
                    preStatement.setString(1, txtKhoa.getText());
                    preStatement.setString(2, txtHoTen.getText());
                    preStatement.setString(3, txtGioiTinh.getText());
                    preStatement.setString(4, txtNgaySinh.getText());
                    preStatement.setString(5, txtQueQuan.getText());
                    preStatement.setString(6, txtMaBS.getText());
                    int kq = preStatement.executeUpdate();
                    if(kq>0){
                        hienThiDanhSach();
                        JOptionPane.showMessageDialog(null, "LÆ°u thÃ nh cÃ´ng");
                    }
                    else{
                        JOptionPane.showMessageDialog(null, "LÆ°u thÃ nh cÃ´ng");
                    }
                }
                catch(Exception ex){
                    ex.printStackTrace();
                }
            }
            else return;
        }
        else{
             try{
                    String sqlInsert="INSERT INTO BACSI VALUES (?,?,?,?,?,?)";
                    preStatement = conn.prepareStatement(sqlInsert);
                    preStatement.setString(1, txtMaBS.getText());
                    preStatement.setString(2, txtKhoa.getText());
                    preStatement.setString(3, txtHoTen.getText());
                    preStatement.setString(4, txtGioiTinh.getText());
                    preStatement.setString(5, txtQueQuan.getText());
                    preStatement.setString(6, txtNgaySinh.getText());
                    
                    
                    int them = preStatement.executeUpdate();
                    if(them>0){
                        hienThiDanhSach();
                        JOptionPane.showMessageDialog(null, "LÆ°u thÃ nh cÃ´ng");
                    }
                    else
                        JOptionPane.showMessageDialog(null, "ChÆ°a lÆ°u");
                }
                catch(Exception ex){
                    ex.printStackTrace();
                }
        }
    }//GEN-LAST:event_btnLuuActionPerformed

    private void btnXoaBSActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnXoaBSActionPerformed
        // TODO add your handling code here:
        int tl = JOptionPane.showConfirmDialog(null, "Báº¡n cÃ³ cháº¯c muá»‘n xÃ³a khÃ´ng?", "XÃ¡c nháº­n xÃ³a", JOptionPane.YES_NO_OPTION);
        if(tl== JOptionPane.YES_OPTION){
            try{
                String sqlDelete = "DELETE FROM BACSI WHERE MABS= '" +txtMaBS.getText()+"'";
                preStatement = conn.prepareStatement(sqlDelete);
                int x = preStatement.executeUpdate();
                if(x>0){
                    hienThiDanhSach();
                    JOptionPane.showMessageDialog(null, "Ä?Ã£ xÃ³a thÃ nh cÃ´ng");
                }
                else{
                    JOptionPane.showMessageDialog(null, "XÃ³a khÃ´ng thÃ nh cÃ´ng");
                }
            }
            catch(Exception ex){
                ex.printStackTrace();
            }
        }
    }//GEN-LAST:event_btnXoaBSActionPerformed

    private void btnTimKiemBSActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnTimKiemBSActionPerformed
        // TODO add your handling code here:
        dtmLich = (DefaultTableModel)tblLichTruc.getModel();
        hienThiLichTrucTheoBS();
    }//GEN-LAST:event_btnTimKiemBSActionPerformed

    private void txtTimKiemKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtTimKiemKeyPressed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtTimKiemKeyPressed

    private void btnTimKiemPhongActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnTimKiemPhongActionPerformed
        // TODO add your handling code here:
        hienThiLichTrucTheoPhong();
    }//GEN-LAST:event_btnTimKiemPhongActionPerformed

    private void btnXemLichActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnXemLichActionPerformed
        // TODO add your handling code here:
        hienThiLichTruc();
    }//GEN-LAST:event_btnXemLichActionPerformed

    private void btnXoaLichActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnXoaLichActionPerformed
        // TODO add your handling code here:
        int tl = JOptionPane.showConfirmDialog(null, "Báº¡n cÃ³ cháº¯c muá»‘n xÃ³a khÃ´ng?", "XÃ¡c nháº­n xÃ³a", JOptionPane.YES_NO_OPTION);
        if(tl== JOptionPane.YES_OPTION){
            try{
            
            
                int row = tblLichTruc.getSelectedRow();
                String sqlDelete = "DELETE FROM LICHTRUC WHERE MALT= '" +tblLichTruc.getValueAt(row, 0)+"'";             
                preStatement = conn.prepareStatement(sqlDelete);
                
                int x = preStatement.executeUpdate();
                if(x>0){
                    hienThiLichTruc();
                    JOptionPane.showMessageDialog(null, "Ä?Ã£ xÃ³a thÃ nh cÃ´ng");
                }
                else{
                    JOptionPane.showMessageDialog(null, "XÃ³a khÃ´ng thÃ nh cÃ´ng");
                }
            }
            catch(Exception ex){
                ex.printStackTrace();
            }
        }          
    }//GEN-LAST:event_btnXoaLichActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(ManHinhChinhCT.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(ManHinhChinhCT.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(ManHinhChinhCT.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(ManHinhChinhCT.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new ManHinhChinhCT().setVisible(true);
		
                
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnLuu;
    private javax.swing.JButton btnSapLich;
    private javax.swing.JButton btnThemBS;
    private javax.swing.JButton btnTimKiemBS;
    private javax.swing.JButton btnTimKiemPhong;
    private javax.swing.JButton btnXemLich;
    private javax.swing.JButton btnXoaBS;
    private javax.swing.JButton btnXoaLich;
    private javax.swing.JDesktopPane desktopPane;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JLabel lblGioiTinh;
    private javax.swing.JLabel lblHoTen;
    private javax.swing.JLabel lblKhoa;
    private javax.swing.JLabel lblMaBS;
    private javax.swing.JLabel lblNgaySinh;
    private javax.swing.JLabel lblQueQuan;
    private javax.swing.JMenuBar menuBar;
    private javax.swing.JMenuItem mnuDangNhap;
    private javax.swing.JMenuItem mnuDangXuat;
    private javax.swing.JMenu mnuHeThong;
    private javax.swing.JMenuItem mnuLichTruc;
    private javax.swing.JMenu mnuQuanLy;
    private javax.swing.JMenuItem mnuThoat;
    private javax.swing.JMenuItem mnuThongTinBS;
    private javax.swing.JMenu mnuTroGiup;
    private javax.swing.JPanel pnBacSi;
    private javax.swing.JPanel pnChiTietBS;
    private javax.swing.JPanel pnChinh;
    private javax.swing.JPanel pnDSBS;
    private javax.swing.JPanel pnLichTruc;
    private javax.swing.JTable tblDSBS;
    private javax.swing.JTable tblLichTruc;
    private javax.swing.JTextField txtGioiTinh;
    private javax.swing.JTextField txtHoTen;
    private javax.swing.JTextField txtKhoa;
    private javax.swing.JTextField txtMaBS;
    private javax.swing.JTextField txtNgaySinh;
    private javax.swing.JTextField txtQueQuan;
    private javax.swing.JTextField txtTimKiem;
    // End of variables declaration//GEN-END:variables

    private void ketNoiCSDL() {
        String strServer = "DESKTOP-48KPGRL";
        String strDatabase = "QLBV";
        String strUsername="sa";
        String strPassword="1234";
        try{
            Class.forName("com.microsoft.sqlserver.jdbc.SQLServerDriver");
            String connectionURL = "jdbc:sqlserver://" + strServer + ":1433;databaseName=" + strDatabase
                                + ";user=" + strUsername + ";password=" + strPassword;
            conn = DriverManager.getConnection(connectionURL);
        }
        catch(Exception ex){
            ex.printStackTrace();
        }
    }
    private void hienThiDanhSach() {
        try{
            String sqlSelect = "SELECT* FROM BACSI";
            preStatement = conn.prepareStatement(sqlSelect);
            result = preStatement.executeQuery();
            dtmLich.setRowCount(0);
            while(result.next()){
                Vector<Object> vec = new Vector<Object>();
                vec.add(result.getString("MABS"));
                vec.add(result.getString("HOTEN"));
                vec.add(result.getString("PHAI"));
                vec.add(result.getString("NAMSINH"));
                vec.add(result.getString("KHOA"));
                vec.add(result.getString("QUEQUAN"));
                dtmLich.addRow(vec);
            }
        }
        catch(Exception ex){
            ex.printStackTrace();
        }
    }
    
    private void hienThiLichTruc() {
        try{
            String sqlSelect = "SELECT* FROM LICHTRUC, PHONG, BACSI WHERE PHONG.MAPHG=LICHTRUC.MAPHG AND BACSI.MABS=LICHTRUC.MABS";
            preStatement = conn.prepareStatement(sqlSelect);
            result = preStatement.executeQuery();
            dtmLich.setRowCount(0);
            while(result.next()){
                Vector<Object> vec = new Vector<Object>();
                vec.add(result.getString("MALT"));
                vec.add(result.getString("MABS"));
                vec.add(result.getString("HOTEN"));
                vec.add(result.getDate("NGAYTRUC"));
                vec.add(result.getString("CA"));
                vec.add(result.getString("TENPHONG"));
                dtmLich.addRow(vec);
            }
        }
        catch(Exception ex){
            ex.printStackTrace();
        }
    }
    
    private void hienThiLichTrucTheoBS() {
        try{
            String sqlSelect = "SELECT* FROM LICHTRUC, PHONG, BACSI WHERE PHONG.MAPHG=LICHTRUC.MAPHG AND BACSI.MABS=LICHTRUC.MABS AND (BACSI.MABS=? OR HOTEN=?)";
            preStatement = conn.prepareStatement(sqlSelect);
            preStatement.setString(1, txtTimKiem.getText());
            preStatement.setString(2, txtTimKiem.getText());
            result = preStatement.executeQuery();
            dtmLich.setRowCount(0);
            while(result.next()){
                Vector<Object> vec = new Vector<Object>();
                vec.add(result.getString("MALT"));
                vec.add(result.getString("MABS"));
                vec.add(result.getString("HOTEN"));
                vec.add(result.getDate("NGAYTRUC"));
                vec.add(result.getString("CA"));
                vec.add(result.getString("TENPHONG"));
                dtmLich.addRow(vec);
            }
        }
        catch(Exception ex){
            ex.printStackTrace();
        }
    }
    
    private void hienThiLichTrucTheoPhong() {
        try{
            String sqlSelect = "SELECT* FROM LICHTRUC, PHONG, BACSI WHERE PHONG.MAPHG=LICHTRUC.MAPHG AND BACSI.MABS=LICHTRUC.MABS AND (PHONG.MAPHG=? OR TENPHONG=?)";
            preStatement = conn.prepareStatement(sqlSelect);
            preStatement.setString(1, txtTimKiem.getText());
            preStatement.setString(2, txtTimKiem.getText());
            result = preStatement.executeQuery();
            dtmLich.setRowCount(0);
            while(result.next()){
                Vector<Object> vec = new Vector<Object>();
                vec.add(result.getString("MALT"));
                vec.add(result.getString("MABS"));
                vec.add(result.getString("HOTEN"));
                vec.add(result.getDate("NGAYTRUC"));
                vec.add(result.getString("CA"));
                vec.add(result.getString("TENPHONG"));
                dtmLich.addRow(vec);
            }
        }
        catch(Exception ex){
            ex.printStackTrace();
        }
    }
    
   
    
    private boolean kiemTraTonTai(String ma) {
        try{
            String sqlSelect="SELECT *FROM BACSI WHERE MABS=?";
            preStatement=conn.prepareStatement(sqlSelect);
            preStatement.setString(1, ma);
            ResultSet re = preStatement.executeQuery();
            return re.next();
        }
        catch(Exception ex){
            ex.printStackTrace();
        }
        return false;
    }
}
